{"level":"error","message":"Error: Business document required\n    at GetUsersUsecase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\get-users\\get-users.usecase.ts:11:38)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\get-users\\get-users.usecase.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\get-users\\get-users.usecase.ts:4:12)\n    at GetUsersUsecase.execute (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\get-users\\get-users.usecase.ts:19:16)\n    at GetUsersController.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\get-users\\get-users.controller.ts:18:49)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\get-users\\get-users.controller.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"23/01/2024 09:45:55"}
{"level":"error","message":"Error: Email already registered\n    at CreateCompanyUserUseCase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\create-company-user\\create-company-user.usecase.ts:28:37)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\create-company-user\\create-company-user.usecase.ts:5:58)","timestamp":"23/01/2024 10:59:08"}
{"level":"error","message":"Error: Admin must register CPF\n    at CreateCompanyUserUseCase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\create-company-user\\create-company-user.usecase.ts:51:48)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\create-company-user\\create-company-user.usecase.ts:5:58)","timestamp":"23/01/2024 10:59:29"}
{"level":"error","message":"Error: User must have a contract first\n    at CreateCompanyUserUseCase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\create-company-user\\create-company-user.usecase.ts:58:43)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\create-company-user\\create-company-user.usecase.ts:5:58)","timestamp":"23/01/2024 11:01:14"}
{"level":"error","message":"Error: User already exists\n    at CreateCompanyUserUseCase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\create-company-user\\create-company-user.usecase.ts:55:24)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\create-company-user\\create-company-user.usecase.ts:5:58)","timestamp":"23/01/2024 11:01:41"}
{"level":"error","message":"Error: Password is required\n    at Function.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\entities\\company-user.entity.ts:53:34)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\entities\\company-user.entity.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\entities\\company-user.entity.ts:4:12)\n    at Function.create (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\entities\\company-user.entity.ts:33:16)\n    at CreateCompanyUserUseCase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\create-company-user\\create-company-user.usecase.ts:43:42)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\create-company-user\\create-company-user.usecase.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"23/01/2024 12:43:44"}
{"level":"error","message":"Error: Password is required\n    at Function.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\entities\\company-user.entity.ts:53:34)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\entities\\company-user.entity.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\entities\\company-user.entity.ts:4:12)\n    at Function.create (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\entities\\company-user.entity.ts:33:16)\n    at CreateCompanyUserUseCase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\create-company-user\\create-company-user.usecase.ts:43:42)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\create-company-user\\create-company-user.usecase.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"23/01/2024 12:43:52"}
{"level":"error","message":"PrismaClientKnownRequestError: \nInvalid `prismaClient.businessUser.update()` invocation in\nC:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\repositories\\implementations\\company-user.prisma.repository.ts:63:60\n\n  60 }   \n  61 \n  62 async updateUser(data: CompanyUserEntity): Promise<BusinessUserResponse> {\n→ 63     const updateUser = await prismaClient.businessUser.update(\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found.\n    at ni.handleRequestError (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:6817)\n    at ni.handleAndLogRequestError (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:6206)\n    at ni.request (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:5926)\n    at l (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:129:10023)","timestamp":"23/01/2024 12:45:23"}
{"level":"error","message":"PrismaClientKnownRequestError: \nInvalid `prismaClient.businessUser.update()` invocation in\nC:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\repositories\\implementations\\company-user.prisma.repository.ts:63:60\n\n  60 }   \n  61 \n  62 async updateUser(data: CompanyUserEntity): Promise<BusinessUserResponse> {\n→ 63     const updateUser = await prismaClient.businessUser.update(\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found.\n    at ni.handleRequestError (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:6817)\n    at ni.handleAndLogRequestError (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:6206)\n    at ni.request (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:5926)\n    at l (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:129:10023)","timestamp":"23/01/2024 12:47:53"}
{"level":"error","message":"Error: Password is required\n    at Function.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\entities\\company-user.entity.ts:53:34)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\entities\\company-user.entity.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\entities\\company-user.entity.ts:4:12)\n    at Function.create (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\entities\\company-user.entity.ts:33:16)\n    at CreateCompanyUserUseCase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\create-company-user\\create-company-user.usecase.ts:43:42)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\create-company-user\\create-company-user.usecase.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"23/01/2024 12:50:56"}
{"level":"error","message":"PrismaClientKnownRequestError: \nInvalid `prismaClient.businessUser.update()` invocation in\nC:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\repositories\\implementations\\company-user.prisma.repository.ts:63:60\n\n  60 }   \n  61 \n  62 async updateUser(data: CompanyUserEntity): Promise<BusinessUserResponse> {\n→ 63     const updateUser = await prismaClient.businessUser.update(\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found.\n    at ni.handleRequestError (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:6817)\n    at ni.handleAndLogRequestError (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:6206)\n    at ni.request (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:5926)\n    at l (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:129:10023)","timestamp":"23/01/2024 12:52:02"}
{"level":"error","message":"PrismaClientKnownRequestError: \nInvalid `prismaClient.businessUser.update()` invocation in\nC:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\repositories\\implementations\\company-user.prisma.repository.ts:63:60\n\n  60 }   \n  61 \n  62 async updateUser(data: CompanyUserEntity): Promise<BusinessUserResponse> {\n→ 63     const updateUser = await prismaClient.businessUser.update(\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found.\n    at ni.handleRequestError (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:6817)\n    at ni.handleAndLogRequestError (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:6206)\n    at ni.request (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:5926)\n    at l (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:129:10023)","timestamp":"23/01/2024 12:52:13"}
{"level":"error","message":"Error: User not found\n    at UpdateUserByAdminUsecase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\update-user-by-admin\\update-user-by-admin.usecase.ts:14:29)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\update-user-by-admin\\update-user-by-admin.usecase.ts:5:58)","timestamp":"23/01/2024 12:57:46"}
{"level":"error","message":"Error: User not found\n    at UpdateUserByAdminUsecase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\update-user-by-admin\\update-user-by-admin.usecase.ts:14:29)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\update-user-by-admin\\update-user-by-admin.usecase.ts:5:58)","timestamp":"23/01/2024 13:13:19"}
{"level":"error","message":"Error: User not found\n    at UpdateUserByAdminUsecase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\update-user-by-admin\\update-user-by-admin.usecase.ts:14:29)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\update-user-by-admin\\update-user-by-admin.usecase.ts:5:58)","timestamp":"23/01/2024 13:14:02"}
{"level":"error","message":"Error: User not found\n    at UpdateUserByAdminUsecase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\update-user-by-admin\\update-user-by-admin.usecase.ts:15:29)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\update-user-by-admin\\update-user-by-admin.usecase.ts:5:58)","timestamp":"23/01/2024 13:14:39"}
{"level":"error","message":"Error: User not found\n    at UpdateUserByAdminUsecase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\update-user-by-admin\\update-user-by-admin.usecase.ts:15:29)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\update-user-by-admin\\update-user-by-admin.usecase.ts:5:58)","timestamp":"23/01/2024 13:16:21"}
{"level":"error","message":"Error: User not found\n    at UpdateUserByAdminUsecase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\update-user-by-admin\\update-user-by-admin.usecase.ts:14:29)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\update-user-by-admin\\update-user-by-admin.usecase.ts:5:58)","timestamp":"23/01/2024 13:17:41"}
{"level":"error","message":"Error: User not found\n    at UpdateUserByAdminUsecase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\update-user-by-admin\\update-user-by-admin.usecase.ts:14:29)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\update-user-by-admin\\update-user-by-admin.usecase.ts:5:58)","timestamp":"23/01/2024 13:18:21"}
{"level":"error","message":"Error: User not found\n    at UpdateUserByAdminUsecase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\update-user-by-admin\\update-user-by-admin.usecase.ts:14:29)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\update-user-by-admin\\update-user-by-admin.usecase.ts:5:58)","timestamp":"23/01/2024 13:18:52"}
{"level":"error","message":"Error: User not found\n    at UpdateUserByAdminUsecase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\update-user-by-admin\\update-user-by-admin.usecase.ts:14:29)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\update-user-by-admin\\update-user-by-admin.usecase.ts:5:58)","timestamp":"23/01/2024 13:20:06"}
{"level":"error","message":"Error: User not found\n    at UpdateUserByAdminUsecase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\update-user-by-admin\\update-user-by-admin.usecase.ts:14:29)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\update-user-by-admin\\update-user-by-admin.usecase.ts:5:58)","timestamp":"23/01/2024 13:20:34"}
{"level":"error","message":"Error: User not found\n    at UpdateUserByAdminUsecase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\update-user-by-admin\\update-user-by-admin.usecase.ts:14:29)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\update-user-by-admin\\update-user-by-admin.usecase.ts:5:58)","timestamp":"23/01/2024 13:21:54"}
{"level":"error","message":"Error: User not found\n    at UpdateUserByAdminUsecase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\update-user-by-admin\\update-user-by-admin.usecase.ts:14:29)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\update-user-by-admin\\update-user-by-admin.usecase.ts:5:58)","timestamp":"23/01/2024 13:23:45"}
{"level":"error","message":"Error: User not found\n    at UpdateUserByAdminUsecase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\update-user-by-admin\\update-user-by-admin.usecase.ts:14:29)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\update-user-by-admin\\update-user-by-admin.usecase.ts:5:58)","timestamp":"23/01/2024 13:25:45"}
{"level":"error","message":"Error: User not found\n    at UpdateUserByAdminUsecase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\update-user-by-admin\\update-user-by-admin.usecase.ts:14:29)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\update-user-by-admin\\update-user-by-admin.usecase.ts:5:58)","timestamp":"23/01/2024 13:31:46"}
{"level":"error","message":"Error: User not found\n    at UpdateUserByAdminUsecase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\update-user-by-admin\\update-user-by-admin.usecase.ts:14:29)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\update-user-by-admin\\update-user-by-admin.usecase.ts:5:58)","timestamp":"23/01/2024 13:32:11"}
{"level":"error","message":"Error: User not found\n    at UpdateUserByAdminUsecase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\update-user-by-admin\\update-user-by-admin.usecase.ts:14:29)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\update-user-by-admin\\update-user-by-admin.usecase.ts:5:58)","timestamp":"23/01/2024 13:32:53"}
{"level":"error","message":"Error: User not found\n    at UpdateUserByAdminUsecase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\update-user-by-admin\\update-user-by-admin.usecase.ts:14:29)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\update-user-by-admin\\update-user-by-admin.usecase.ts:5:58)","timestamp":"23/01/2024 13:33:11"}
{"level":"error","message":"Error: Cannot set headers after they are sent to the client\n    at new NodeError (node:internal/errors:405:5)\n    at ServerResponse.setHeader (node:_http_outgoing:648:11)\n    at ServerResponse.header (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\express\\lib\\response.js:794:10)\n    at ServerResponse.send (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\express\\lib\\response.js:174:12)\n    at ServerResponse.json (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\express\\lib\\response.js:278:15)\n    at GetUsersController.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\get-users\\get-users.controller.ts:20:24)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\get-users\\get-users.controller.ts:5:58)","timestamp":"23/01/2024 13:33:51"}
{"level":"error","message":"Error: Password is required\n    at Function.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\entities\\company-user.entity.ts:53:34)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\entities\\company-user.entity.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\entities\\company-user.entity.ts:4:12)\n    at Function.create (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\entities\\company-user.entity.ts:33:16)\n    at CreateCompanyUserUseCase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\create-company-user\\create-company-user.usecase.ts:43:42)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\create-company-user\\create-company-user.usecase.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"23/01/2024 13:36:54"}
{"level":"error","message":"Error: Password is required\n    at Function.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\entities\\company-user.entity.ts:53:34)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\entities\\company-user.entity.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\entities\\company-user.entity.ts:4:12)\n    at Function.create (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\entities\\company-user.entity.ts:33:16)\n    at CreateCompanyUserUseCase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\create-company-user\\create-company-user.usecase.ts:43:42)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\create-company-user\\create-company-user.usecase.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"23/01/2024 13:38:27"}
{"level":"error","message":"Error: Username is required\n    at Function.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\entities\\company-user.entity.ts:54:35)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\entities\\company-user.entity.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\entities\\company-user.entity.ts:4:12)\n    at Function.create (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\entities\\company-user.entity.ts:33:16)\n    at CreateCompanyUserUseCase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\create-company-user\\create-company-user.usecase.ts:43:42)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\create-company-user\\create-company-user.usecase.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"23/01/2024 13:41:19"}
{"level":"error","message":"PrismaClientValidationError: \nInvalid `prismaClient.businessUser.update()` invocation in\nC:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\repositories\\implementations\\company-user.prisma.repository.ts:62:60\n\n  59 }   \n  60 \n  61 async updateUser(data: CompanyUserEntity): Promise<BusinessUserResponse> {\n→ 62     const updateUser = await prismaClient.businessUser.update({\n           where: {\n             uuid: \"ec963030-2754-4008-8f93-f5a930500e27\"\n           },\n           data: {\n             permissions: undefined,\n             password: \"\",\n             is_active: \"Inativo\"\n                        ~~~~~~~~~\n           }\n         })\n\nArgument `is_active`: Invalid value provided. Expected Boolean or BoolFieldUpdateOperationsInput, provided String.\n    at Zn (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:117:5888)\n    at ni.handleRequestError (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:6516)\n    at ni.handleAndLogRequestError (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:6206)\n    at ni.request (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:5926)\n    at l (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:129:10023)","timestamp":"23/01/2024 13:44:11"}
{"level":"error","message":"PrismaClientValidationError: \nInvalid `prismaClient.businessUser.update()` invocation in\nC:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\repositories\\implementations\\company-user.prisma.repository.ts:62:60\n\n  59 }   \n  60 \n  61 async updateUser(data: CompanyUserEntity): Promise<BusinessUserResponse> {\n→ 62     const updateUser = await prismaClient.businessUser.update({\n           where: {\n             uuid: \"ec963030-2754-4008-8f93-f5a930500e27\"\n           },\n           data: {\n             permissions: undefined,\n             password: \"\",\n             is_active: \"Ativo\"\n                        ~~~~~~~\n           }\n         })\n\nArgument `is_active`: Invalid value provided. Expected Boolean or BoolFieldUpdateOperationsInput, provided String.\n    at Zn (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:117:5888)\n    at ni.handleRequestError (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:6516)\n    at ni.handleAndLogRequestError (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:6206)\n    at ni.request (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:5926)\n    at l (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:129:10023)","timestamp":"23/01/2024 13:47:47"}
{"level":"error","message":"PrismaClientValidationError: \nInvalid `prismaClient.businessUser.update()` invocation in\nC:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\repositories\\implementations\\company-user.prisma.repository.ts:62:60\n\n  59 }   \n  60 \n  61 async updateUser(data: CompanyUserEntity): Promise<BusinessUserResponse> {\n→ 62     const updateUser = await prismaClient.businessUser.update({\n           where: {\n             uuid: \"ec963030-2754-4008-8f93-f5a930500e27\"\n           },\n           data: {\n             permissions: undefined,\n             password: \"\",\n             is_active: \"Ativo\"\n                        ~~~~~~~\n           }\n         })\n\nArgument `is_active`: Invalid value provided. Expected Boolean or BoolFieldUpdateOperationsInput, provided String.\n    at Zn (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:117:5888)\n    at ni.handleRequestError (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:6516)\n    at ni.handleAndLogRequestError (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:6206)\n    at ni.request (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:5926)\n    at l (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:129:10023)","timestamp":"23/01/2024 13:49:34"}
{"level":"error","message":"PrismaClientValidationError: \nInvalid `prismaClient.businessUser.update()` invocation in\nC:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\repositories\\implementations\\company-user.prisma.repository.ts:62:60\n\n  59 }   \n  60 \n  61 async updateUser(data: CompanyUserEntity): Promise<BusinessUserResponse> {\n→ 62     const updateUser = await prismaClient.businessUser.update({\n           where: {\n             uuid: \"ec963030-2754-4008-8f93-f5a930500e27\"\n           },\n           data: {\n             permissions: undefined,\n             password: \"\",\n             is_active: \"Ativo\"\n                        ~~~~~~~\n           }\n         })\n\nArgument `is_active`: Invalid value provided. Expected Boolean or BoolFieldUpdateOperationsInput, provided String.\n    at Zn (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:117:5888)\n    at ni.handleRequestError (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:6516)\n    at ni.handleAndLogRequestError (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:6206)\n    at ni.request (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:5926)\n    at l (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:129:10023)","timestamp":"23/01/2024 13:53:14"}
{"level":"error","message":"PrismaClientValidationError: \nInvalid `prismaClient.businessUser.update()` invocation in\nC:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\repositories\\implementations\\company-user.prisma.repository.ts:62:60\n\n  59 }   \n  60 \n  61 async updateUser(data: CompanyUserEntity): Promise<BusinessUserResponse> {\n→ 62     const updateUser = await prismaClient.businessUser.update({\n           where: {\n             uuid: \"ec963030-2754-4008-8f93-f5a930500e27\"\n           },\n           data: {\n             permissions: undefined,\n             password: \"\",\n             is_active: \"Ativo\"\n                        ~~~~~~~\n           }\n         })\n\nArgument `is_active`: Invalid value provided. Expected Boolean or BoolFieldUpdateOperationsInput, provided String.\n    at Zn (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:117:5888)\n    at ni.handleRequestError (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:6516)\n    at ni.handleAndLogRequestError (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:6206)\n    at ni.request (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:5926)\n    at l (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:129:10023)","timestamp":"23/01/2024 13:53:47"}
{"level":"error","message":"PrismaClientValidationError: \nInvalid `prismaClient.businessUser.update()` invocation in\nC:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\repositories\\implementations\\company-user.prisma.repository.ts:62:60\n\n  59 }   \n  60 \n  61 async updateUser(data: CompanyUserEntity): Promise<BusinessUserResponse> {\n→ 62     const updateUser = await prismaClient.businessUser.update({\n           where: {\n             uuid: \"ec963030-2754-4008-8f93-f5a930500e27\"\n           },\n           data: {\n             permissions: undefined,\n             password: \"\",\n             is_active: \"Ativo\"\n                        ~~~~~~~\n           }\n         })\n\nArgument `is_active`: Invalid value provided. Expected Boolean or BoolFieldUpdateOperationsInput, provided String.\n    at Zn (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:117:5888)\n    at ni.handleRequestError (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:6516)\n    at ni.handleAndLogRequestError (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:6206)\n    at ni.request (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:5926)\n    at l (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:129:10023)","timestamp":"23/01/2024 13:56:02"}
{"level":"error","message":"PrismaClientValidationError: \nInvalid `prismaClient.businessUser.update()` invocation in\nC:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\repositories\\implementations\\company-user.prisma.repository.ts:62:60\n\n  59 }   \n  60 \n  61 async updateUser(data: CompanyUserEntity): Promise<BusinessUserResponse> {\n→ 62     const updateUser = await prismaClient.businessUser.update({\n           where: {\n             uuid: \"ec963030-2754-4008-8f93-f5a930500e27\"\n           },\n           data: {\n             permissions: undefined,\n             password: \"\",\n             is_active: \"Ativo\"\n                        ~~~~~~~\n           }\n         })\n\nArgument `is_active`: Invalid value provided. Expected Boolean or BoolFieldUpdateOperationsInput, provided String.\n    at Zn (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:117:5888)\n    at ni.handleRequestError (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:6516)\n    at ni.handleAndLogRequestError (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:6206)\n    at ni.request (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:5926)\n    at l (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:129:10023)","timestamp":"23/01/2024 13:57:20"}
{"level":"error","message":"PrismaClientValidationError: \nInvalid `prismaClient.businessUser.update()` invocation in\nC:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\repositories\\implementations\\company-user.prisma.repository.ts:62:60\n\n  59 }   \n  60 \n  61 async updateUser(data: CompanyUserEntity): Promise<BusinessUserResponse> {\n→ 62     const updateUser = await prismaClient.businessUser.update({\n           where: {\n             uuid: \"ec963030-2754-4008-8f93-f5a930500e27\"\n           },\n           data: {\n             permissions: undefined,\n             password: \"\",\n             is_active: \"Ativo\"\n                        ~~~~~~~\n           }\n         })\n\nArgument `is_active`: Invalid value provided. Expected Boolean or BoolFieldUpdateOperationsInput, provided String.\n    at Zn (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:117:5888)\n    at ni.handleRequestError (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:6516)\n    at ni.handleAndLogRequestError (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:6206)\n    at ni.request (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:5926)\n    at l (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:129:10023)","timestamp":"23/01/2024 14:00:46"}
{"level":"error","message":"PrismaClientValidationError: \nInvalid `prismaClient.businessUser.update()` invocation in\nC:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\repositories\\implementations\\company-user.prisma.repository.ts:62:60\n\n  59 }   \n  60 \n  61 async updateUser(data: CompanyUserEntity): Promise<BusinessUserResponse> {\n→ 62     const updateUser = await prismaClient.businessUser.update({\n           where: {\n             uuid: \"ec963030-2754-4008-8f93-f5a930500e27\"\n           },\n           data: {\n             permissions: [\n               \"sales\"\n             ],\n             password: \"\",\n             is_active: \"Ativo\"\n                        ~~~~~~~\n           }\n         })\n\nArgument `is_active`: Invalid value provided. Expected Boolean or BoolFieldUpdateOperationsInput, provided String.\n    at Zn (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:117:5888)\n    at ni.handleRequestError (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:6516)\n    at ni.handleAndLogRequestError (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:6206)\n    at ni.request (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:5926)\n    at l (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:129:10023)","timestamp":"23/01/2024 14:03:30"}
{"level":"error","message":"PrismaClientValidationError: \nInvalid `prismaClient.businessUser.update()` invocation in\nC:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\repositories\\implementations\\company-user.prisma.repository.ts:62:60\n\n  59 }   \n  60 \n  61 async updateUser(data: CompanyUserEntity): Promise<BusinessUserResponse> {\n→ 62     const updateUser = await prismaClient.businessUser.update({\n           where: {\n             uuid: \"ec963030-2754-4008-8f93-f5a930500e27\"\n           },\n           data: {\n             permissions: [\n               \"sales\"\n             ],\n             password: \"\",\n             is_active: \"Ativo\"\n                        ~~~~~~~\n           }\n         })\n\nArgument `is_active`: Invalid value provided. Expected Boolean or BoolFieldUpdateOperationsInput, provided String.\n    at Zn (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:117:5888)\n    at ni.handleRequestError (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:6516)\n    at ni.handleAndLogRequestError (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:6206)\n    at ni.request (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:5926)\n    at l (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:129:10023)","timestamp":"23/01/2024 14:05:12"}
{"level":"error","message":"PrismaClientValidationError: \nInvalid `prismaClient.businessUser.update()` invocation in\nC:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\repositories\\implementations\\company-user.prisma.repository.ts:62:60\n\n  59 }   \n  60 \n  61 async updateUser(data: CompanyUserEntity): Promise<BusinessUserResponse> {\n→ 62     const updateUser = await prismaClient.businessUser.update({\n           where: {\n             uuid: \"ec963030-2754-4008-8f93-f5a930500e27\"\n           },\n           data: {\n             permissions: [\n               \"sales\"\n             ],\n             password: \"\",\n             is_active: \"Ativo\"\n                        ~~~~~~~\n           }\n         })\n\nArgument `is_active`: Invalid value provided. Expected Boolean or BoolFieldUpdateOperationsInput, provided String.\n    at Zn (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:117:5888)\n    at ni.handleRequestError (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:6516)\n    at ni.handleAndLogRequestError (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:6206)\n    at ni.request (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:5926)\n    at l (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:129:10023)","timestamp":"23/01/2024 14:07:00"}
{"level":"error","message":"PrismaClientValidationError: \nInvalid `prismaClient.businessUser.update()` invocation in\nC:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\repositories\\implementations\\company-user.prisma.repository.ts:62:60\n\n  59 }   \n  60 \n  61 async updateUser(data: CompanyUserEntity): Promise<BusinessUserResponse> {\n→ 62     const updateUser = await prismaClient.businessUser.update({\n           where: {\n             uuid: \"ec963030-2754-4008-8f93-f5a930500e27\"\n           },\n           data: {\n             permissions: [\n               \"sales\"\n             ],\n             password: \"\",\n             is_active: \"Ativo\"\n                        ~~~~~~~\n           }\n         })\n\nArgument `is_active`: Invalid value provided. Expected Boolean or BoolFieldUpdateOperationsInput, provided String.\n    at Zn (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:117:5888)\n    at ni.handleRequestError (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:6516)\n    at ni.handleAndLogRequestError (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:6206)\n    at ni.request (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:5926)\n    at l (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:129:10023)","timestamp":"23/01/2024 14:08:34"}
{"level":"error","message":"Error: Admin is not allowed to update this user\n    at UpdateUserByAdminUsecase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\update-user-by-admin\\update-user-by-admin.usecase.ts:15:73)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\update-user-by-admin\\update-user-by-admin.usecase.ts:5:58)","timestamp":"23/01/2024 14:23:47"}
{"level":"error","message":"PrismaClientValidationError: \nInvalid `prismaClient.businessUser.findUnique()` invocation in\nC:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\repositories\\implementations\\company-user.prisma.repository.ts:21:61\n\n  18 \n  19 \n  20 async findById(id: string): Promise<BusinessUserResponse | null> {\n→ 21     const companyUser = await prismaClient.businessUser.findUnique({\n           where: {\n             uuid: undefined,\n         ?   admin_document?: String,\n         ?   email?: String,\n         ?   AND?: BusinessUserWhereInput | BusinessUserWhereInput[],\n         ?   OR?: BusinessUserWhereInput[],\n         ?   NOT?: BusinessUserWhereInput | BusinessUserWhereInput[],\n         ?   business_info_uuid?: StringNullableFilter | String | Null,\n         ?   is_admin?: BoolFilter | Boolean,\n         ?   business_document?: StringFilter | String,\n         ?   name?: StringNullableFilter | String | Null,\n         ?   user_name?: StringFilter | String,\n         ?   password?: StringFilter | String,\n         ?   function?: StringNullableFilter | String | Null,\n         ?   permissions?: EnumPermissionsNullableListFilter,\n         ?   is_client?: BoolFilter | Boolean,\n         ?   is_active?: BoolFilter | Boolean,\n         ?   created_at?: DateTimeNullableFilter | DateTime | Null,\n         ?   updated_at?: DateTimeNullableFilter | DateTime | Null,\n         ?   BusinessInfo?: BusinessInfoNullableRelationFilter | BusinessInfoWhereInput | Null\n           }\n         })\n\nArgument `where` of type BusinessUserWhereUniqueInput needs at least one of `uuid`, `admin_document` or `email` arguments. Available options are marked with ?.\n    at Zn (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:117:5888)\n    at ni.handleRequestError (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:6516)\n    at ni.handleAndLogRequestError (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:6206)\n    at ni.request (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:5926)\n    at l (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:129:10023)","timestamp":"23/01/2024 14:29:18"}
{"level":"error","message":"Error: Admin is not allowed to delete this user\n    at DeleteUserByAdminUsecase.<anonymous> (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\delete-user-by-admin\\delete-user-by-admin.usecase.ts:14:68)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyUser\\usecases\\delete-user-by-admin\\delete-user-by-admin.usecase.ts:5:58)","timestamp":"23/01/2024 14:32:05"}
{"level":"error","message":"PrismaClientValidationError: \nInvalid `prismaClient.businessInfo.findUnique()` invocation in\nC:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\src\\modules\\Company\\CompanyData\\repositories\\implementations\\prisma\\company-data-prisma.repository.ts:61:61\n\n  58 }\n  59 \n  60 async findById(id: string): Promise<CompanyDataEntity | null> {\n→ 61     const companyData = await prismaClient.businessInfo.findUnique({\n           where: {\n             uuid: undefined,\n         ?   document?: String,\n         ?   AND?: BusinessInfoWhereInput | BusinessInfoWhereInput[],\n         ?   OR?: BusinessInfoWhereInput[],\n         ?   NOT?: BusinessInfoWhereInput | BusinessInfoWhereInput[],\n         ?   address_uuid?: StringNullableFilter | String | Null,\n         ?   contract_info_uuid?: StringNullableFilter | String | Null,\n         ?   fantasy_name?: StringFilter | String,\n         ?   corporate_reason?: StringNullableFilter | String | Null,\n         ?   classification?: StringFilter | String,\n         ?   colaborators_number?: IntFilter | Int,\n         ?   block_list?: StringNullableListFilter,\n         ?   status?: BoolFilter | Boolean,\n         ?   phone_1?: StringFilter | String,\n         ?   phone_2?: StringNullableFilter | String | Null,\n         ?   business_category_id?: StringFilter | String,\n         ?   email?: StringFilter | String,\n         ?   business_type?: EnumBusinessTypeOptionsFilter | BusinessTypeOptions,\n         ?   Address?: AddressNullableRelationFilter | AddressWhereInput | Null,\n         ?   ContractInfo?: ContractInfoNullableRelationFilter | ContractInfoWhereInput | Null,\n         ?   BusinessCategory?: BusinessCategoryRelationFilter | BusinessCategoryWhereInput,\n         ?   BusinessUser?: BusinessUserListRelationFilter,\n         ?   UserInfo?: UserInfoListRelationFilter,\n         ?   Benefit?: BenefitListRelationFilter,\n         ?   Transactions?: TransactionsListRelationFilter\n           }\n         })\n\nArgument `where` of type BusinessInfoWhereUniqueInput needs at least one of `uuid` or `document` arguments. Available options are marked with ?.\n    at Zn (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:117:5888)\n    at ni.handleRequestError (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:6516)\n    at ni.handleAndLogRequestError (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:6206)\n    at ni.request (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:124:5926)\n    at l (C:\\Users\\james\\Documents\\4.Projetos\\16.correct-nodejs-backend\\node_modules\\@prisma\\client\\runtime\\library.js:129:10023)","timestamp":"23/01/2024 15:09:51"}
